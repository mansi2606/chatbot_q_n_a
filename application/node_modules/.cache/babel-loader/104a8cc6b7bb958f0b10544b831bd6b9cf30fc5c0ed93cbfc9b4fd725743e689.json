{"ast":null,"code":"var _jsxFileName = \"/Users/oeanf14/Desktop/application/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { AppBar, Toolbar, Typography, Container, Box, Paper, IconButton, TextField, CircularProgress, List, ListItem, ListItemText, Button } from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport StopIcon from \"@mui/icons-material/Stop\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const podcastRef = useRef(null);\n  const responseAudioRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const bufferAudioRefs = useRef([]);\n  const [appStarted, setAppStarted] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState([{\n    text: \"Ask any question about the podcast.\",\n    isUser: false\n  }]);\n  const [inputText, setInputText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleAppStart = () => {\n    setAppStarted(true);\n    // Optionally prime audio permission\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).catch(() => {\n      console.warn(\"Mic permission denied.\");\n    });\n  };\n  const togglePodcast = async () => {\n    if (!podcastRef.current) return;\n    try {\n      if (isPlaying) {\n        podcastRef.current.pause();\n      } else {\n        await podcastRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    } catch (err) {\n      console.warn(\"Autoplay blocked for podcast:\", err);\n    }\n  };\n  const startListening = () => {\n    var _podcastRef$current;\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition not supported.\");\n      return;\n    }\n    if (isPlaying) (_podcastRef$current = podcastRef.current) === null || _podcastRef$current === void 0 ? void 0 : _podcastRef$current.pause();\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"en-US\";\n    let finalTranscript = \"\";\n    recognition.onstart = () => {\n      setIsListening(true);\n      setInputText(\"\");\n    };\n    recognition.onresult = event => {\n      let interim = \"\";\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        const result = event.results[i];\n        const text = result[0].transcript;\n        if (result.isFinal) {\n          finalTranscript += text + \" \";\n        } else {\n          interim += text;\n        }\n      }\n      setInputText(finalTranscript + interim);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n      if (finalTranscript.trim()) {\n        setInputText(\"\");\n        handleSend(finalTranscript.trim());\n      }\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event);\n      setIsListening(false);\n    };\n    recognitionRef.current = recognition;\n    recognition.start();\n  };\n  const stopListening = () => {\n    var _recognitionRef$curre;\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n  };\n  const handleSend = async messageOverride => {\n    const query = messageOverride !== null && messageOverride !== void 0 ? messageOverride : inputText.trim();\n    if (!query) return;\n    setMessages(prev => [...prev, {\n      text: query,\n      isUser: true\n    }]);\n    setInputText(\"\");\n    setLoading(true);\n\n    // 🔀 Play a random buffer audio while waiting\n    const randomIndex = Math.floor(Math.random() * bufferAudioRefs.current.length);\n    const bufferAudio = bufferAudioRefs.current[randomIndex];\n    try {\n      bufferAudio.currentTime = 0;\n      await bufferAudio.play();\n    } catch (err) {\n      console.warn(\"Buffer audio autoplay blocked:\", err);\n    }\n    try {\n      var _response$headers$get;\n      const requestId = uuidv4();\n      const startTime = performance.now();\n      const response = await fetch(\"http://localhost:8000/ask/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Request-ID\": requestId\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      const mediaSource = new MediaSource();\n      const audioUrl = URL.createObjectURL(mediaSource);\n      responseAudioRef.current.src = audioUrl;\n      mediaSource.addEventListener(\"sourceopen\", async () => {\n        var _response$body;\n        const sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg');\n        const reader = (_response$body = response.body) === null || _response$body === void 0 ? void 0 : _response$body.getReader();\n        if (!reader) return;\n        const queue = [];\n        let processing = false;\n        const processQueue = () => {\n          if (processing || queue.length === 0 || sourceBuffer.updating) return;\n          processing = true;\n          const chunk = queue.shift();\n          sourceBuffer.appendBuffer(chunk);\n        };\n        sourceBuffer.addEventListener(\"updateend\", () => {\n          processing = false;\n          processQueue();\n        });\n        const readChunk = async () => {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) {\n            mediaSource.endOfStream();\n            return;\n          }\n          queue.push(value);\n          processQueue();\n          readChunk();\n        };\n        readChunk();\n\n        // reader.read().then(appendChunk);\n        // Start playback after appending begins\n        try {\n          await responseAudioRef.current.play();\n        } catch (err) {\n          console.warn(\"Autoplay blocked for response audio:\", err);\n        }\n        responseAudioRef.current.onended = () => {\n          setTimeout(() => {\n            try {\n              var _podcastRef$current2;\n              (_podcastRef$current2 = podcastRef.current) === null || _podcastRef$current2 === void 0 ? void 0 : _podcastRef$current2.play();\n              setIsPlaying(true);\n            } catch (err) {\n              console.warn(\"Autoplay failed on podcast resume:\", err);\n            }\n          }, 5000);\n        };\n      });\n      const reply = (_response$headers$get = response.headers.get(\"X-Response-Text\")) !== null && _response$headers$get !== void 0 ? _response$headers$get : \"Here's your answer. Please listen to the audio.\";\n      setMessages(prev => [...prev, {\n        text: reply,\n        isUser: false\n      }]);\n      const endTime = performance.now();\n      console.log(`Total fetch time: ${Math.round(endTime - startTime)} ms`);\n\n      // ⏹ Stop buffer audio\n      bufferAudio.pause();\n      bufferAudio.currentTime = 0;\n    } catch (error) {\n      console.error(\"Error during handleSend:\", error);\n      setMessages(prev => [...prev, {\n        text: \"Sorry, there was a problem processing your request.\",\n        isUser: false\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //   const handleSend = async (messageOverride?: string) => {\n  //     const query = messageOverride ?? inputText.trim();\n  //     if (!query) return;\n\n  //     setMessages((prev) => [...prev, { text: query, isUser: true }]);\n  //     setInputText(\"\");\n  //     setLoading(true);\n\n  //       // 🔀 Pick a random buffer audio\n  //     const randomIndex = Math.floor(Math.random() * bufferAudioRefs.current.length);\n  //     const bufferAudio = bufferAudioRefs.current[randomIndex];\n\n  //     try {\n  //       // ▶️ Play buffer audio\n  //       bufferAudio.currentTime = 0;\n  //       await bufferAudio?.play();\n  //     } catch (err) {\n  //       console.warn(\"Buffer audio autoplay blocked:\", err);\n  //     }\n\n  //     try {\n\n  //       // 🔊 Start buffer audio while waiting\n  //     // if (bufferAudioRef.current) {\n  //     //   bufferAudioRef.current.currentTime = 0;\n  //     //   await bufferAudioRef.current.play();\n  //     // }\n  //       const requestId = uuidv4();\n  //       const startTime = performance.now();\n\n  //       const response = await fetch(\"http://localhost:8000/ask/\", {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //           \"X-Request-ID\": requestId,\n  //         },\n  //         body: JSON.stringify({ query }),\n  //       });\n\n  //       const mediaSource = new MediaSource();\n  //       const audioUrl = URL.createObjectURL(mediaSource);\n\n  //       responseAudioRef.current.src = audioUrl;\n\n  //       mediaSource.addEventListener(\"sourceopen\", async () => {\n  //         const sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg'); // adjust MIME type if needed\n\n  //         const reader = response.body?.getReader();\n  //         if (!reader) return;\n\n  //         const appendChunk = async ({ done, value }: ReadableStreamReadResult<Uint8Array>) => {\n  //           if (done) {\n  //             mediaSource.endOfStream();\n  //             return;\n  //           }\n  //           sourceBuffer.appendBuffer(value);\n  //           await new Promise<void>((resolve) => {\n  //             sourceBuffer.addEventListener(\"updateend\", () => resolve(), { once: true });\n  //           });\n  //           reader.read().then(appendChunk);\n  //         };\n\n  //         reader.read().then(appendChunk);\n  //       });\n\n  //       const reply =\n  //         response.headers.get(\"X-Response-Text\") ??\n  //         \"Here's your answer. Please listen to the audio.\";\n\n  //       setMessages((prev) => [...prev, { text: reply, isUser: false }]);\n\n  //       const endTime = performance.now();\n  //       console.log(`Total fetch time: ${Math.round(endTime - startTime)} ms`);\n\n  //         // ⏹ Stop buffer audio\n  //       bufferAudio?.pause();\n  //       bufferAudio.currentTime = 0;\n  // //      if (responseAudioRef.current) {\n  // //        responseAudioRef.current.src = audioUrl;\n  // //        try {\n  // //          await responseAudioRef.current.play();\n  // //        } catch (err) {\n  // //          console.warn(\"Autoplay blocked for response audio:\", err);\n  // //        }\n  // //      }\n  //       if (responseAudioRef.current) {\n  //   responseAudioRef.current.src = audioUrl;\n\n  //       try {\n  //         await responseAudioRef.current.play();\n\n  //         responseAudioRef.current.onended = () => {\n  //           setTimeout(() => {\n  //             try {\n  //               podcastRef.current?.play();\n  //               setIsPlaying(true);\n  //             } catch (err) {\n  //               console.warn(\"Autoplay failed on podcast resume:\", err);\n  //             }\n  //           }, 5000); // 🎧 Wait 5 seconds before resuming podcast\n  //         };\n  //       } catch (err) {\n  //         console.warn(\"Autoplay blocked for response audio:\", err);\n  //       }\n  //     }\n\n  //     } catch (error) {\n  //       setMessages((prev) => [\n  //         ...prev,\n  //         { text: \"Sorry, there was a problem processing your request.\", isUser: false },\n  //       ]);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  // 🔒 Show intro screen until app is interacted with\n  if (!appStarted) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        textAlign: \"center\",\n        mt: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Insurance Simplified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          maxWidth: 600,\n          mx: \"auto\",\n          mb: 4\n        },\n        children: \"The one stop shop to enhance your knowledge and understanding of insurance products and associated concepts pertaining to the world of Insurance.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        onClick: handleAppStart,\n        children: \"Start App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\",\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.jpg\",\n        alt: \"Logo\",\n        style: {\n          width: 100,\n          marginBottom: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        gutterBottom: true,\n        children: \"Insurance Simplified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          color: \"#555\",\n          maxWidth: \"700px\",\n          mx: \"auto\"\n        },\n        children: \"The one stop shop to enhance your knowledge and understanding of insurance products and associated concepts pertaining to the world of Insurance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"\\uD83C\\uDFA7 Finance Simplified Podcast with hosts Raj and Priya \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Podcast Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: togglePodcast,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: isPlaying ? \"Playing...\" : \"Paused\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: podcastRef,\n        src: \"/podcast.mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          maxHeight: 300,\n          overflow: \"auto\",\n          p: 2,\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              justifyContent: msg.isUser ? \"flex-end\" : \"flex-start\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: msg.text,\n              sx: {\n                textAlign: msg.isUser ? \"right\" : \"left\",\n                maxWidth: \"80%\",\n                bgcolor: msg.isUser ? \"#e3f2fd\" : \"#fff3e0\",\n                p: 1,\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your question...\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          onClick: isListening ? stopListening : startListening,\n          children: isListening ? /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleSend(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: responseAudioRef,\n        style: {\n          display: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), [\"/audio1.mp3\", \"/audio2.mp3\", \"/audio3.mp3\"].map((src, i) => /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: el => {\n        if (el) bufferAudioRefs.current[i] = el;\n      },\n      src: src,\n      style: {\n        display: \"none\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"w5VkEMa246TJVEjhoruhGxl/t/0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","AppBar","Toolbar","Typography","Container","Box","Paper","IconButton","TextField","CircularProgress","List","ListItem","ListItemText","Button","PlayArrowIcon","PauseIcon","MicIcon","StopIcon","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","podcastRef","responseAudioRef","recognitionRef","bufferAudioRefs","appStarted","setAppStarted","isPlaying","setIsPlaying","isListening","setIsListening","messages","setMessages","text","isUser","inputText","setInputText","loading","setLoading","handleAppStart","navigator","mediaDevices","getUserMedia","audio","catch","console","warn","togglePodcast","current","pause","play","err","startListening","_podcastRef$current","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","continuous","interimResults","lang","finalTranscript","onstart","onresult","event","interim","i","resultIndex","results","length","result","transcript","isFinal","onend","trim","handleSend","onerror","error","start","stopListening","_recognitionRef$curre","stop","messageOverride","query","prev","randomIndex","Math","floor","random","bufferAudio","currentTime","_response$headers$get","requestId","startTime","performance","now","response","fetch","method","headers","body","JSON","stringify","mediaSource","MediaSource","audioUrl","URL","createObjectURL","src","addEventListener","_response$body","sourceBuffer","addSourceBuffer","reader","getReader","queue","processing","processQueue","updating","chunk","shift","appendBuffer","readChunk","done","value","read","endOfStream","push","onended","setTimeout","_podcastRef$current2","reply","get","endTime","log","round","sx","textAlign","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mx","mb","size","onClick","alt","style","width","marginBottom","fontWeight","color","position","display","alignItems","ref","maxHeight","overflow","p","dense","map","msg","justifyContent","primary","bgcolor","borderRadius","gap","fullWidth","placeholder","onChange","e","target","onKeyDown","key","el","_c","$RefreshReg$"],"sources":["/Users/oeanf14/Desktop/application/src/App.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  Box,\n  Paper,\n  IconButton,\n  TextField,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n} from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport PauseIcon from \"@mui/icons-material/Pause\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport StopIcon from \"@mui/icons-material/Stop\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const podcastRef = useRef<HTMLAudioElement>(null);\n  const responseAudioRef = useRef<HTMLAudioElement>(null);\n  const recognitionRef = useRef<any>(null);\n  const bufferAudioRefs = useRef<HTMLAudioElement[]>([]);\n\n  const [appStarted, setAppStarted] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [messages, setMessages] = useState<{ text: string; isUser: boolean }[]>([\n    { text: \"Ask any question about the podcast.\", isUser: false },\n  ]);\n  const [inputText, setInputText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleAppStart = () => {\n    setAppStarted(true);\n    // Optionally prime audio permission\n    navigator.mediaDevices.getUserMedia({ audio: true }).catch(() => {\n      console.warn(\"Mic permission denied.\");\n    });\n  };\n\n  const togglePodcast = async () => {\n    if (!podcastRef.current) return;\n    try {\n      if (isPlaying) {\n        podcastRef.current.pause();\n      } else {\n        await podcastRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    } catch (err) {\n      console.warn(\"Autoplay blocked for podcast:\", err);\n    }\n  };\n\n  const startListening = () => {\n    const SpeechRecognition =\n      (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n\n    if (!SpeechRecognition) {\n      alert(\"Speech Recognition not supported.\");\n      return;\n    }\n\n    if (isPlaying) podcastRef.current?.pause();\n\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = \"en-US\";\n\n    let finalTranscript = \"\";\n\n    recognition.onstart = () => {\n      setIsListening(true);\n      setInputText(\"\");\n    };\n\n    recognition.onresult = (event: any) => {\n      let interim = \"\";\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        const result = event.results[i];\n        const text = result[0].transcript;\n        if (result.isFinal) {\n          finalTranscript += text + \" \";\n        } else {\n          interim += text;\n        }\n      }\n      setInputText(finalTranscript + interim);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n      if (finalTranscript.trim()) {\n        setInputText(\"\");\n        handleSend(finalTranscript.trim());\n      }\n    };\n\n    recognition.onerror = (event: any) => {\n      console.error(\"Speech recognition error:\", event);\n      setIsListening(false);\n    };\n\n    recognitionRef.current = recognition;\n    recognition.start();\n  };\n\n  const stopListening = () => {\n    recognitionRef.current?.stop();\n  };\n\n  const handleSend = async (messageOverride?: string) => {\n    const query = messageOverride ?? inputText.trim();\n    if (!query) return;\n  \n    setMessages((prev) => [...prev, { text: query, isUser: true }]);\n    setInputText(\"\");\n    setLoading(true);\n  \n    // 🔀 Play a random buffer audio while waiting\n    const randomIndex = Math.floor(Math.random() * bufferAudioRefs.current.length);\n    const bufferAudio = bufferAudioRefs.current[randomIndex];\n    try {\n      bufferAudio.currentTime = 0;\n      await bufferAudio.play();\n    } catch (err) {\n      console.warn(\"Buffer audio autoplay blocked:\", err);\n    }\n  \n    try {\n      const requestId = uuidv4();\n      const startTime = performance.now();\n  \n      const response = await fetch(\"http://localhost:8000/ask/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Request-ID\": requestId,\n        },\n        body: JSON.stringify({ query }),\n      });\n  \n      const mediaSource = new MediaSource();\n      const audioUrl = URL.createObjectURL(mediaSource);\n      responseAudioRef.current.src = audioUrl;\n  \n      mediaSource.addEventListener(\"sourceopen\", async () => {\n        const sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg');\n        const reader = response.body?.getReader();\n        if (!reader) return;\n      \n        const queue = [];\n        let processing = false;\n      \n        const processQueue = () => {\n          if (processing || queue.length === 0 || sourceBuffer.updating) return;\n          processing = true;\n          const chunk = queue.shift();\n          sourceBuffer.appendBuffer(chunk);\n        };\n      \n        sourceBuffer.addEventListener(\"updateend\", () => {\n          processing = false;\n          processQueue();\n        });\n      \n        const readChunk = async () => {\n          const { done, value } = await reader.read();\n          if (done) {\n            mediaSource.endOfStream();\n            return;\n          }\n          queue.push(value);\n          processQueue();\n          readChunk();\n        };\n      \n        readChunk();\n      \n      \n        // reader.read().then(appendChunk);\n         // Start playback after appending begins\n         try {\n          await responseAudioRef.current.play();\n        } catch (err) {\n          console.warn(\"Autoplay blocked for response audio:\", err);\n        }\n\n        responseAudioRef.current.onended = () => {\n          setTimeout(() => {\n            try {\n              podcastRef.current?.play();\n              setIsPlaying(true);\n            } catch (err) {\n              console.warn(\"Autoplay failed on podcast resume:\", err);\n            }\n          }, 5000);\n        };\n      });\n  \n      const reply =\n        response.headers.get(\"X-Response-Text\") ??\n        \"Here's your answer. Please listen to the audio.\";\n      setMessages((prev) => [...prev, { text: reply, isUser: false }]);\n  \n      const endTime = performance.now();\n      console.log(`Total fetch time: ${Math.round(endTime - startTime)} ms`);\n  \n      // ⏹ Stop buffer audio\n      bufferAudio.pause();\n      bufferAudio.currentTime = 0;\n    } catch (error) {\n      console.error(\"Error during handleSend:\", error);\n      setMessages((prev) => [\n        ...prev,\n        {\n          text: \"Sorry, there was a problem processing your request.\",\n          isUser: false,\n        },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n//   const handleSend = async (messageOverride?: string) => {\n//     const query = messageOverride ?? inputText.trim();\n//     if (!query) return;\n\n//     setMessages((prev) => [...prev, { text: query, isUser: true }]);\n//     setInputText(\"\");\n//     setLoading(true);\n\n\n//       // 🔀 Pick a random buffer audio\n//     const randomIndex = Math.floor(Math.random() * bufferAudioRefs.current.length);\n//     const bufferAudio = bufferAudioRefs.current[randomIndex];\n\n//     try {\n//       // ▶️ Play buffer audio\n//       bufferAudio.currentTime = 0;\n//       await bufferAudio?.play();\n//     } catch (err) {\n//       console.warn(\"Buffer audio autoplay blocked:\", err);\n//     }\n   \n//     try {\n\n//       // 🔊 Start buffer audio while waiting\n//     // if (bufferAudioRef.current) {\n//     //   bufferAudioRef.current.currentTime = 0;\n//     //   await bufferAudioRef.current.play();\n//     // }\n//       const requestId = uuidv4();\n//       const startTime = performance.now();\n\n//       const response = await fetch(\"http://localhost:8000/ask/\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           \"X-Request-ID\": requestId,\n//         },\n//         body: JSON.stringify({ query }),\n//       });\n\n//       const mediaSource = new MediaSource();\n//       const audioUrl = URL.createObjectURL(mediaSource);\n\n//       responseAudioRef.current.src = audioUrl;\n\n//       mediaSource.addEventListener(\"sourceopen\", async () => {\n//         const sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg'); // adjust MIME type if needed\n\n//         const reader = response.body?.getReader();\n//         if (!reader) return;\n\n//         const appendChunk = async ({ done, value }: ReadableStreamReadResult<Uint8Array>) => {\n//           if (done) {\n//             mediaSource.endOfStream();\n//             return;\n//           }\n//           sourceBuffer.appendBuffer(value);\n//           await new Promise<void>((resolve) => {\n//             sourceBuffer.addEventListener(\"updateend\", () => resolve(), { once: true });\n//           });\n//           reader.read().then(appendChunk);\n//         };\n\n//         reader.read().then(appendChunk);\n//       });\n\n//       const reply =\n//         response.headers.get(\"X-Response-Text\") ??\n//         \"Here's your answer. Please listen to the audio.\";\n\n//       setMessages((prev) => [...prev, { text: reply, isUser: false }]);\n\n//       const endTime = performance.now();\n//       console.log(`Total fetch time: ${Math.round(endTime - startTime)} ms`);\n\n\n//         // ⏹ Stop buffer audio\n//       bufferAudio?.pause();\n//       bufferAudio.currentTime = 0;\n// //      if (responseAudioRef.current) {\n// //        responseAudioRef.current.src = audioUrl;\n// //        try {\n// //          await responseAudioRef.current.play();\n// //        } catch (err) {\n// //          console.warn(\"Autoplay blocked for response audio:\", err);\n// //        }\n// //      }\n//       if (responseAudioRef.current) {\n//   responseAudioRef.current.src = audioUrl;\n\n//       try {\n//         await responseAudioRef.current.play();\n\n//         responseAudioRef.current.onended = () => {\n//           setTimeout(() => {\n//             try {\n//               podcastRef.current?.play();\n//               setIsPlaying(true);\n//             } catch (err) {\n//               console.warn(\"Autoplay failed on podcast resume:\", err);\n//             }\n//           }, 5000); // 🎧 Wait 5 seconds before resuming podcast\n//         };\n//       } catch (err) {\n//         console.warn(\"Autoplay blocked for response audio:\", err);\n//       }\n//     }\n\n//     } catch (error) {\n//       setMessages((prev) => [\n//         ...prev,\n//         { text: \"Sorry, there was a problem processing your request.\", isUser: false },\n//       ]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n  // 🔒 Show intro screen until app is interacted with\n  if (!appStarted) {\n    return (\n      <Container sx={{ textAlign: \"center\", mt: 20 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Insurance Simplified\n        </Typography>\n        <Typography variant=\"body1\" sx={{ maxWidth: 600, mx: \"auto\", mb: 4 }}>\n          The one stop shop to enhance your knowledge and understanding of insurance products and\n          associated concepts pertaining to the world of Insurance.\n        </Typography>\n        <Button variant=\"contained\" size=\"large\" onClick={handleAppStart}>\n          Start App\n        </Button>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Box sx={{ textAlign: \"center\", mt: 4 }}>\n        <img src=\"/logo.jpg\" alt=\"Logo\" style={{ width: 100, marginBottom: 16 }} />\n        <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n          Insurance Simplified\n        </Typography>\n        <Typography variant=\"body1\" sx={{ color: \"#555\", maxWidth: \"700px\", mx: \"auto\" }}>\n          The one stop shop to enhance your knowledge and understanding of insurance products and\n          associated concepts pertaining to the world of Insurance\n        </Typography>\n      </Box>\n\n      <AppBar position=\"static\" sx={{ mt: 4 }}>\n        <Toolbar>\n          <Typography variant=\"h6\">🎧 Finance Simplified Podcast with hosts Raj and Priya </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Podcast Player\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <IconButton onClick={togglePodcast}>\n            {isPlaying ? <PauseIcon /> : <PlayArrowIcon />}\n          </IconButton>\n          <Typography>{isPlaying ? \"Playing...\" : \"Paused\"}</Typography>\n        </Box>\n        <audio ref={podcastRef} src=\"/podcast.mp3\" />\n      </Box>\n\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Assistant\n        </Typography>\n\n        <Paper sx={{ maxHeight: 300, overflow: \"auto\", p: 2, mb: 2 }}>\n          <List dense>\n            {messages.map((msg, i) => (\n              <ListItem key={i} sx={{ justifyContent: msg.isUser ? \"flex-end\" : \"flex-start\" }}>\n                <ListItemText\n                  primary={msg.text}\n                  sx={{\n                    textAlign: msg.isUser ? \"right\" : \"left\",\n                    maxWidth: \"80%\",\n                    bgcolor: msg.isUser ? \"#e3f2fd\" : \"#fff3e0\",\n                    p: 1,\n                    borderRadius: 2,\n                  }}\n                />\n              </ListItem>\n            ))}\n            {loading && (\n              <ListItem>\n                <ListItemText primary={<CircularProgress size={20} />} />\n              </ListItem>\n            )}\n          </List>\n        </Paper>\n\n        <Box display=\"flex\" gap={1}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Type your question...\"\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n          />\n          <IconButton color=\"primary\" onClick={isListening ? stopListening : startListening}>\n            {isListening ? <StopIcon /> : <MicIcon />}\n          </IconButton>\n          <Button variant=\"contained\" onClick={() => handleSend()}>\n            Send\n          </Button>\n        </Box>\n        <audio ref={responseAudioRef} style={{ display: \"none\" }} />\n      </Box>\n      {[\"/audio1.mp3\", \"/audio2.mp3\", \"/audio3.mp3\"].map((src, i) => (\n        <audio\n        key={i}\n        ref={(el) => {\n          if (el) bufferAudioRefs.current[i] = el;\n        }}\n        src={src}\n        style={{ display: \"none\" }}\n      />\n      ))}\n      \n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}