{"ast":null,"code":"var _jsxFileName = \"/Users/oealr25/Desktop/genai_chatbot/frontend/podcast-voice-assistant-final/src/SpeechRecognitionComponent.tsx\",\n  _s = $RefreshSig$();\nimport Button from \"./Button\";\nimport Grid from \"./Grid\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognitionComponent = ({\n  onStart,\n  onSendMessage\n}) => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const createRecognizer = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.lang = \"en-US\";\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => {\n      setListening(false);\n      if (inputText.trim()) {\n        onSendMessage(inputText);\n        setInputText(\"\");\n      }\n    };\n    recognition.onresult = event => {\n      let final = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        if (event.results[i].isFinal) {\n          final += event.results[i][0].transcript + \" \";\n        }\n      }\n      if (final) setInputText(prev => prev + final);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event);\n      setListening(false);\n    };\n    return recognition;\n  };\n  const handleStartStop = () => {\n    if (listening) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n    } else {\n      var _recognitionRef$curre2;\n      onStart();\n      if (!recognitionRef.current) {\n        recognitionRef.current = createRecognizer();\n      }\n      (_recognitionRef$curre2 = recognitionRef.current) === null || _recognitionRef$curre2 === void 0 ? void 0 : _recognitionRef$curre2.start();\n    }\n  };\n  const handleSend = () => {\n    if (inputText.trim()) {\n      onSendMessage(inputText);\n      setInputText(\"\");\n    }\n  };\n  const handleEnter = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputText,\n      onChange: e => setInputText(e.target.value),\n      onKeyDown: handleEnter,\n      placeholder: \"Speak or type your question...\",\n      style: {\n        padding: \"10px\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"4px\",\n        fontSize: \"16px\",\n        width: \"100%\",\n        boxSizing: \"border-box\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: listening ? handleStartStop : inputText.trim() ? handleSend : handleStartStop,\n      style: {\n        position: \"absolute\",\n        right: \"0\",\n        top: \"0\",\n        bottom: \"0\",\n        width: \"40px\",\n        background: \"#f5f5f5\",\n        border: \"1px solid #ccc\",\n        borderLeft: \"none\",\n        cursor: \"pointer\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"18px\"\n      },\n      title: listening ? \"Stop Listening\" : \"Start Listening\",\n      children: listening ? \"‚èπ\" : \"üé§\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), listening && /*#__PURE__*/_jsxDEV(Grid, {\n      style: {\n        position: \"absolute\",\n        right: \"50px\",\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"8px\",\n        height: \"8px\",\n        borderRadius: \"50%\",\n        backgroundColor: \"red\"\n      },\n      title: \"Listening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechRecognitionComponent, \"yCSjmV0tH8QYy73gZUBcXqxEDX8=\");\n_c = SpeechRecognitionComponent;\nexport default SpeechRecognitionComponent;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognitionComponent\");","map":{"version":3,"names":["Button","Grid","useRef","useState","jsxDEV","_jsxDEV","SpeechRecognitionComponent","onStart","onSendMessage","_s","inputText","setInputText","listening","setListening","recognitionRef","createRecognizer","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","lang","onstart","onend","trim","onresult","event","final","i","resultIndex","results","length","isFinal","transcript","prev","onerror","console","error","handleStartStop","_recognitionRef$curre","current","stop","_recognitionRef$curre2","start","handleSend","handleEnter","e","key","style","position","children","value","onChange","target","onKeyDown","placeholder","padding","border","borderRadius","fontSize","width","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","right","top","bottom","background","borderLeft","cursor","display","alignItems","justifyContent","title","transform","height","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/oealr25/Desktop/genai_chatbot/frontend/podcast-voice-assistant-final/src/SpeechRecognitionComponent.tsx"],"sourcesContent":["\nimport Button from \"./Button\";\nimport Grid from \"./Grid\";\nimport { useRef, useState } from \"react\";\nimport type React from \"react\";\n\ninterface SpeechRecognitionComponentProps {\n  onStart: () => void;\n  onSendMessage: (message: string) => void;\n}\n\nconst SpeechRecognitionComponent: React.FC<SpeechRecognitionComponentProps> = ({\n  onStart,\n  onSendMessage,\n}) => {\n  const [inputText, setInputText] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef<any>(null);\n\n  const createRecognizer = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.lang = \"en-US\";\n\n    recognition.onstart = () => setListening(true);\n    recognition.onend = () => {\n      setListening(false);\n      if (inputText.trim()) {\n        onSendMessage(inputText);\n        setInputText(\"\");\n      }\n    };\n\n    recognition.onresult = (event: any) => {\n      let final = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        if (event.results[i].isFinal) {\n          final += event.results[i][0].transcript + \" \";\n        }\n      }\n      if (final) setInputText((prev) => prev + final);\n    };\n\n    recognition.onerror = (event: any) => {\n      console.error(\"Speech recognition error:\", event);\n      setListening(false);\n    };\n\n    return recognition;\n  };\n\n  const handleStartStop = () => {\n    if (listening) {\n      recognitionRef.current?.stop();\n    } else {\n      onStart();\n      if (!recognitionRef.current) {\n        recognitionRef.current = createRecognizer();\n      }\n      recognitionRef.current?.start();\n    }\n  };\n\n  const handleSend = () => {\n    if (inputText.trim()) {\n      onSendMessage(inputText);\n      setInputText(\"\");\n    }\n  };\n\n  const handleEnter = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n\n  return (\n    <Grid style={{ position: \"relative\" }}>\n      <input\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n        onKeyDown={handleEnter}\n        placeholder=\"Speak or type your question...\"\n        style={{\n          padding: \"10px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          fontSize: \"16px\",\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        }}\n      />\n      <Button\n        onClick={\n          listening\n            ? handleStartStop\n            : inputText.trim()\n              ? handleSend\n              : handleStartStop\n        }\n        style={{\n          position: \"absolute\",\n          right: \"0\",\n          top: \"0\",\n          bottom: \"0\",\n          width: \"40px\",\n          background: \"#f5f5f5\",\n          border: \"1px solid #ccc\",\n          borderLeft: \"none\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: \"18px\"\n        }}\n        title={listening ? \"Stop Listening\" : \"Start Listening\"}\n      >\n        {listening ? \"‚èπ\" : \"üé§\"}\n      </Button>\n      {listening && (\n        <Grid\n          style={{\n            position: \"absolute\",\n            right: \"50px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            width: \"8px\",\n            height: \"8px\",\n            borderRadius: \"50%\",\n            backgroundColor: \"red\"\n          }}\n          title=\"Listening\"\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default SpeechRecognitionComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}